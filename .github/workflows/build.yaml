name: Build and Release Generator

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup .NET SDK
        id: setup-dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Build Generator.exe (Release)
        run: .\\build.bat --publish

      - name: Run Generator.exe to generate XML
        run: ./out/bin/Generate.exe
        shell: pwsh

      - name: Create zip
        id: tagrename
        run: Compress-Archive -Path "./out/bin" -DestinationPath "./out/devWinGen-${{ github.event.release.tag_name }}.zip"
        shell: pwsh
      
      - name: Determine release flags
        id: release-flags
        run: |
          if ('${{ github.ref_name }}' -eq 'main') {
            echo "draft=false" >> $env:GITHUB_OUTPUT
            echo "make_latest=true" >> $env:GITHUB_OUTPUT
          } else {
            echo "draft=true" >> $env:GITHUB_OUTPUT
            echo "make_latest=false" >> $env:GITHUB_OUTPUT
          }
        shell: pwsh

      - name: Upload EXE and XML to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            out/devWinGen-${{ github.event.release.tag_name }}.zip
            out/autounattend.xml
            out/singledevwin.iso
          draft: ${{ steps.release-flags.outputs.draft }}
          make_latest: ${{ steps.release-flags.outputs.make_latest }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}